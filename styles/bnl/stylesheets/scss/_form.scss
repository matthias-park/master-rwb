.form-group {
    position: relative;
    $self: &;
    .form-control:not(select) {
        padding-top: 17px;
        + label {
            position: absolute;
            top: 12px;
            left: 12px;
            color: $gray-700;
            pointer-events: none;
            transition: all 0.3s;
        }
        &:focus,
        &:active,
        &:not(:placeholder-shown) {
            + label {
                font-size: 9px;
                top: 4px;
            }
        }
        &.form-control-sm {
          padding-top: 12px;
          + label {
            top: 8px;
            left: 8px;
          }
        }
        &:focus,
        &:active,
        &:not(:placeholder-shown) {
            + label {
                font-size: 8px !important;
                top: 4px;
            }
        }
    }
    select.form-control {
      padding-left: 8px;
    }
    &__icons {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: 8px;
        display: flex;
        align-items: center;
        font-size: 32px;
        .icon-eye-on {
            color: $brand-light;
            cursor: pointer;
        }
        .icon-check {
            display: none;
            color: $success-alt;
        }
        .icon-exclamation {
            display: none;
            color: $danger;
        }
        .tooltip-custom {
            margin-right: 4px;
        }
        .spinner-border {
          position: relative;
          right: 8px;
        }
    }
    select,
    select.is-invalid {
      + #{ $self }__icons {
        right: 10px; 
      }
    }
    &__error-msg {
        display: none;
        font-size: 12px;
        color: $danger;
        margin-top: 3px;
        text-align: left;
    }
    &.show-pass {
        #{ $self }__icons {
            .icon-eye-on {
                &:before {
                    content: '\e977';
                }
            }
        }
    }
    &.success {
        #{ $self }__icons {
            right: 0;
            .icon-check {
                display: inline-block;
            }
        }
    }
    &.has-error {
        input,
        textarea,
        select {
            border: 1px solid $danger;
            background-image: none;
            background-color: $danger-bg;
            color: $danger;
            + label {
              color: $danger;
            }
        }
        #{ $self }__icons {
            right: 0;
            .icon-exclamation {
                display: inline-block;
            }
            .icon-eye-on {
                position: relative;
                right: -6px;
            }
        }
        #{ $self }__error-msg {
            display: block;
        }
    }
    &.has-error.with-message {
      #{ $self }__icons {
        top: calc(50% - 8px);
      }
    }
}

.invalid-feedback {
  font-size: 12px;
}

.react-datepicker-wrapper {
  .form-group {
    .form-control {
      max-width: unset;
      border-color: $gray-200;
      height: 38px;
      padding-left: 12px;
      font-size: 15px;
      &.is-invalid {
        border-color: $danger;
      }
    }
  }
  + .react-datepicker {
    &__tab-loop {
      .react-datepicker-popper {
        z-index: 2;
      }
      .react-datepicker__triangle {
        left: 15% !important;
      }
    }
  }
}

.custom-checkbox {
    label {
        font-size: 14px;
        line-height: 1.5;
        a {
          text-decoration: underline;
        }
    }
    .custom-control-input {
        z-index: 1;
        &:checked {
            + label {
                &:before {
                    background-color: $success;
                    border-color: transparent;
                }
            }
        }
        &.is-invalid {
          + label {
            a {
              color: $danger;
            }
          }
        }
    }
    &.has-error {
        label {
            &:before {
                border-color: $danger;
                background-color: $danger-bg;
            }
        }
    }
}

.custom-radio {
    label {
        line-height: 1.5;
        font-size: 15px;
    }
    &.has-error {
        label {
            &:before {
                border-color: $danger;
                background-color: $danger-bg;
            }
        }
    }
}